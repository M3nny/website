import { Transformer } from 'unified';
import { FFFTransformPreset, StrictPresetOptions, FFFFlavoredFrontmatter } from 'fff-flavored-frontmatter';

/**
 * Predefined path preset
 * @public
 */
declare const path: {
    readonly urara: (path: string) => string;
};
/**
 * Auto-fill datetime from node:fs
 * @beta
 */
declare const fs: (path: string) => FFFTransformPreset;
/**
 * Auto-fill datetime from git
 * @beta
 * @remarks author: Jordan Webb
 * @see {@link https://github.com/jordemort/jordemort.github.io/blob/main/src/plugins/repodates.mjs}
 */
declare const git: (path: string) => FFFTransformPreset;

/**
 * Remark FFF Plugin Options.
 * @public
 */
type RemarkFFFOptions = {
    target: 'mdsvex' | 'astro' | 'nuxt' | (string & {});
    presets: FFFTransformPreset[];
    autofill?: {
        provider: 'fs' | 'git';
        path?: keyof typeof path | ((path: string) => string);
    };
    strict?: StrictPresetOptions;
};
/**
 * Internal Post Data Type.
 * @internal
 */
type _Post = /** MDsveX */ {
    filename: string;
    path: never;
    data: {
        fm: FFFFlavoredFrontmatter & Record<string, unknown>;
        astro: never;
    };
} | /** Astro */ {
    filename: never;
    path: string;
    data: {
        fm: never;
        astro: {
            frontmatter: FFFFlavoredFrontmatter & Record<string, unknown>;
        };
    };
};

/**
 * Remark plugin for auto-conversion other frontmatter variable formats to {@link https://fff.js.org | FFF Flavored Frontmatter}.
 * @param options - Target, FFF Flavor Transform Presets, Autofill and Strict Options
 * @returns FFF Flavored Frontmatter
 * @public
 */
declare const remarkFFF: (options?: RemarkFFFOptions) => Transformer;

export { RemarkFFFOptions, _Post, remarkFFF as default, fs, git, path, remarkFFF };
